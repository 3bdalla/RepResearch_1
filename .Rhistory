visHierarchicalLayout() %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges) %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
#visOptions(highlightNearest = TRUE,
#          selectedBy = "fund_type") %>%
visHierarchicalLayout() %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges) %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
visEdges(arrows = "from") %>%
#visOptions(highlightNearest = TRUE,
#          selectedBy = "fund_type") %>%
visHierarchicalLayout() %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
visEdges(arrows = "from") %>%
#visOptions(highlightNearest = TRUE,
#          selectedBy = "fund_type") %>%
visHierarchicalLayout() %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
visEdges(arrows = "from") %>%
#visOptions(highlightNearest = TRUE,
#          selectedBy = "fund_type") %>%
visLayout(hierarchical = TRUE) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
#visOptions(highlightNearest = TRUE,
#          selectedBy = "fund_type") %>%
visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
install.packages("igraph")
visNetwork(nodes, edges, width = "100%") %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
#visOptions(highlightNearest = TRUE,
#          selectedBy = "fund_type") %>%
visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
nodes$size <- NULL
visNetwork(nodes, edges, width = "100%") %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
#visOptions(highlightNearest = TRUE,
#          selectedBy = "fund_type") %>%
visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = title) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
visOptions(highlightNearest = TRUE,
selectedBy = "fund_type") %>%
visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
visNodes(color = color, shadow = TRUE,
borderWidthSelected = 2,
label = title) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
visOptions(highlightNearest = TRUE,
selectedBy = "fund_type") %>%
visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
visNodes(color = color, shadow = TRUE,
borderWidthSelected = 2,
label = title) %>%
visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
visOptions(highlightNearest = TRUE,
selectedBy = "fund_type") %>%
visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
View(nodes)
visNetwork(nodes, edges, width = "100%") %>%
visNodes(color = color, shadow = TRUE,
borderWidthSelected = 2,
label = nodes$label) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
visOptions(highlightNearest = TRUE,
selectedBy = "fund_type") %>%
visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
nodes$size[nodes$fund_type == "POOL"] <- 100
nodes$size[nodes$fund_type != "POOL"] <- 50
visNetwork(nodes, edges, width = "100%") %>%
visNodes(color = color, shadow = TRUE,
borderWidthSelected = 2,
label = nodes$label,
mass = nodes$size) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
visOptions(highlightNearest = TRUE,
selectedBy = "fund_type") %>%
#visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
visNodes(color = color, shadow = TRUE,
borderWidthSelected = 2,
label = nodes$label,
mass = 5) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
visOptions(highlightNearest = TRUE,
selectedBy = "fund_type") %>%
#visIgraphLayout(layout = "layout_in_circle") %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes, edges, width = "100%") %>%
#visNodes(color = color, shadow = TRUE,
#        borderWidthSelected = 2,
#       label = nodes$label,
#       mass = 5) %>%
#visEdges(length = 3000) %>%
#visEdges(arrows = "from") %>%
visOptions(highlightNearest = TRUE,
selectedBy = "fund_type") %>%
#visIgraphLayout(layout = "layout_in_circle") %>%
visHierarchicalLayout() %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
install.packages("networkD3")
visNetwork(nodes = nodes, edges = edges, width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE)
View(nodes)
nodes$size <- NULL
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE, length = 2000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE, length = 2000) %>%
visPhysics(forceAtlas2Based = -1000)
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE) %>%
visPhysics(forceAtlas2Based = -1000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
View(nodes)
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE) %>%
visPhysics(forceAtlas2Based = -5000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE, length = 1500) %>%
visPhysics(forceAtlas2Based = -5000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE, length = 1500) %>%
visPhysics(forceAtlas2Based = -5000,
repulsion = 200) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE, length = 500) %>%
visPhysics(forceAtlas2Based = -5000,
repulsion = 1000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
repulsion = 1000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE, length = 500) %>%
visPhysics(repulsion = 1000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
visNetwork(nodes = nodes,
edges = edges,
width = "100%") %>%
visNodes(shape = "dot") %>%
visEdges(smooth = FALSE, length = 500) %>%
visPhysics(repulsion = 5000) %>%
htmlwidgets::saveWidget(file = "new_interaction_file.html")
library(networkD3)
forceNetwork(Links = edges, Nodes = nodes,
Source = "from", Target = "to",
NodeID = "id", Group = "fund_type")
nodes_fn <- nodes
edges_fn <- edges
head(nodes)
nodes$id %>%
nodes$id %>%
str_replace_all(pattern = "S", replacement = "")
nodes_fn$id %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer()
nodes_fn$id %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1
nodes_fn$id %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> nodes_fn$id
edges_fn$from %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1
edges_fn$from %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$from
edges_fn$to %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1
edges_fn$to %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$to
forceNetwork(Links = edges, Nodes = nodes,
Source = "from", Target = "to",
NodeID = "id", Group = "fund_type")
View(edges_fn)
View(nodes_fn)
forceNetwork(Links = edges, Nodes = nodes,
Source = "from", Target = "to",
NodeID = "id")
View(edges_fn)
edges_fn$from %>% as.character() -> edges_fn$from
edges_fn$to %>% as.character() -> edges_fn$to
nodes_fn$id %>% as.character() -> nodes_fn$id
forceNetwork(Links = edges, Nodes = nodes,
Source = "from", Target = "to",
NodeID = "id", Group = "fund_type")
nodes_fn <- nodes
edges_fn <- edges
nodes_fn$id %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> nodes_fn$id
edges_fn$from %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$from
edges_fn$to %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$to
edges_fn$from %>% as.character() -> edges_fn$from
edges_fn$to %>% as.character() -> edges_fn$to
nodes_fn$id %>% as.character() -> nodes_fn$id
View(nodes_fn)
View(nodes_fn)
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "id", Group = "fund_type")
View(edges_fn)
View(nodes_fn)
data("MisLinks") %>% head()
MisLinks
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "to", Target = "from",
NodeID = "id", Group = "fund_type")
MisNodes %>% head()
MisLinks %>% head()
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type")
row.names(MisLinks)
row.names(nodes_fn)
str(MisLinks)
str(MisNodes)
str(edges_fn)
nodes_fn <- nodes
edges_fn <- edges
nodes_fn$id %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> nodes_fn$id
edges_fn$from %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$from
edges_fn$to %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$to
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type")
head(MisLinks)
head(MisNodes)
nodes_fn$fund_type
nodes_fn$fund_type == "POOL"
nodes_fn$fund_type[nodes_fn$fund_type == "POOL"]
nodes_fn$fund_type[nodes_fn$fund_type == "POOL"] <- 1
nodes_fn$fund_type
nodes_fn <- nodes
edges_fn <- edges
nodes_fn$id %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> nodes_fn$id
edges_fn$from %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$from
edges_fn$to %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$to
nodes_fn$fund_type %>% as.character()
nodes_fn$fund_type %>% as.character() -> nodes_fn$fund_type
nodes_fn$fund_type[nodes_fn$fund_type == "POOL"] <- 1
nodes_fn$fund_type[nodes_fn$fund_type != "POOL"] <- 2
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type")
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = c("red", "blue"))
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = "d3.scale.category20c()")
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = "d3.scale.category10c()")
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = "d3.scale.category10()")
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = "d3 category10")
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = "d3.scale.category10()")
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = "d3.scale.category20b()")
View(nodes_fn)
nodes_fn <- nodes
edges_fn <- edges
nodes_fn$id %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> nodes_fn$id
edges_fn$from %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$from
edges_fn$to %>%
str_replace_all(pattern = "S",
replacement = "") %>%
as.integer() - 1 -> edges_fn$to
nodes_fn$fund_type %>% as.character() -> nodes_fn$fund_type
str(MisLinks)
str(MisNodes)
nodes_fn$fund_type[nodes_fn$fund_type != "POOL"] <- 1
nodes_fn$fund_type[nodes_fn$fund_type == "POOL"] <- 2
forceNetwork(Links = edges_fn, Nodes = nodes_fn,
Source = "from", Target = "to",
NodeID = "title", Group = "fund_type",
colourScale = "d3.scale.category20b()")
simpleNetwork(edges_fn)
simpleNetwork(edges_fn, linkDistance = 200)
simpleNetwork(edges_fn, linkDistance = 300)
library(swirl)
swirl()
str(mpg)
qploy(displ, hwy, mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, col=drv)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, color=drv, geom=c("points", "smooth"))
qplot(displ, hwy, data=mpg, color=drv, geom=c("point", "smooth"))
qplot(y=hwy, data=mpg, color=drv)
myhigh
qplot(drv, hwy, data=mpg, geom="boxplot")
qplot(drv, hwy, data=mpg, geom="boxplot", color="manufacturer")
qplot(drv, hwy, data=mpg, geom="boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets=.~drv)
qplot(hwy, data=mpg, facets=drv~., binwidth=2)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method="lm")
g + geom_point() + geom_smooth(method="lm") + facet_grid(~ drv)
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~ drv)
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink", size=4, alpha=1/2)
g + geom_point(size=4, alpha=1/2, aes(color=drv))
g + geom_point(aes(color=drv)) + labs(title = "Swirl Rules!") + labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color=drv), size=2, apha=1/2) + geom_smooth(size=4, linetype=3, method="lm", se = FALSE)
g + geom_point(aes(color = drv),size=2,apha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color = drv),size=2,alpha=1/2) + geom_smooth(size=4,linetype=3,method="lm",se=FALSE)
g + geom_point(aes(color=drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g <- ggplot(testdat, aes(x-myx, y=myy))
g <- ggplot(testdat, aes(x=myx, y=myy))
g + geom_line()
g + geom_line(ylim=(-3,3))
g + geom_line(ylim=c(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins=TRUE)
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins=TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
swirl()
swirl(0)
str(diamonds)
qplot(price, data=diamonds)
range(diamonds$price)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth=18497/30, fill = cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut) + geom_smmooth(method="lm")
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cu) + geom_smooth(method="lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut) + geom_smooth(method="lm")
g <- ggplt(diamonds, aes(depth, price))
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length.out = ), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3), facet_grid(cut ~ car2)
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
2
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies) + geom_smooth()
library(ggplot2)
qplot(votes, rating, data = movies) + geom_smooth()
getwd()
setwd("C:/Users/Abdalla/Desktop/Coursera/Reproducible_Research_Mar03/Week2")
